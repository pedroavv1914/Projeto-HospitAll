services:
  # Banco de dados PostgreSQL para desenvolvimento
  postgres-dev:
    image: postgres:15-alpine
    container_name: hospitall-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: hospitall_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - hospitall-dev-network

  # Redis para desenvolvimento
  redis-dev:
    image: redis:7-alpine
    container_name: hospitall-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    networks:
      - hospitall-dev-network

  # Backend em modo desenvolvimento
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: hospitall-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres-dev
      DB_PORT: 5432
      DB_NAME: hospitall_dev
      DB_USER: dev_user
      DB_PASSWORD: dev_password
      USE_POSTGRES: "true"
      JWT_SECRET: dev-jwt-secret-key
      JWT_REFRESH_SECRET: dev-refresh-secret-key
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 30d
      REDIS_HOST: redis-dev
      REDIS_PORT: 6379
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
    ports:
      - "3000:3000"
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - hospitall-dev-network
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  hospitall-dev-network:
    driver: bridge